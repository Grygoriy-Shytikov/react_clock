{"version":3,"sources":["components/Clock/Clock.jsx","api/names.js","App.js","index.js"],"names":["Clock","state","time","Date","this","timeInterval","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","React","Component","defaultProps","names","App","isClockVisible","clockName","setRandomName","Math","floor","random","length","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGMA,E,4MACJC,MAAQ,CACNC,KAAM,IAAIC,M,uDAGZ,WAAqB,IAAD,OAClBC,KAAKC,aAAeC,aAAY,WAC9B,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,O,gCAGL,SAAmBC,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJA,IAASD,EAAUC,MAErBJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DA,M,kCAInE,WACEE,cAAcV,KAAKC,gB,oBAGrB,WACE,IAAQH,EAASE,KAAKH,MAAdC,KAER,OACE,2BACG,IADH,gBAGGA,EAAKQ,0B,GAjCMK,IAAMC,WA2C1BhB,EAAMiB,aAAe,CACnBL,KAAM,WAGOZ,QCrCAkB,EAbD,CACZ,QACA,UACA,QACA,OACA,SACA,QACA,OACA,WACA,OACA,SCkDaC,G,kNArDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,W,EAGbC,cAAgB,WACd,IAAMV,EAAOM,EAAMK,KAAKC,MAAMD,KAAKE,UAAYP,EAAMQ,OAAS,KAE9D,EAAKnB,SAAS,CACZc,UAAWT,K,EAIfe,UAAY,WACV,EAAKpB,SAAS,CAAEa,gBAAgB,K,EAGlCQ,UAAY,WACV,EAAKrB,SAAS,CAAEa,gBAAgB,K,4CAGlC,WACE,MAAsChB,KAAKH,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKQ,UAAU,OACb,2CACCT,GAAkB,kBAAC,EAAD,CAAOR,KAAMS,IAChC,4BACES,KAAK,SACLC,QAAS3B,KAAKuB,WAFhB,cAOA,4BACEG,KAAK,SACLC,QAAS3B,KAAKwB,WAFhB,cAOA,4BACEE,KAAK,SACLC,QAAS3B,KAAKkB,eAFhB,wB,GA3CUP,IAAMC,YCFxBgB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.019386cc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    time: new Date(),\n  }\n\n  componentDidMount() {\n    this.timeInterval = setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <p>\n        {' '}\n        Current time:\n        {time.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string,\n};\n\nClock.defaultProps = {\n  name: 'no name',\n};\n\nexport default Clock;\n","const names = [\n  'Misha',\n  'Vitalii',\n  'Alica',\n  'Paul',\n  'Mykola',\n  'Nadia',\n  'Olha',\n  'Pelahiia',\n  'Anna',\n  'Lesia',\n];\n\nexport default names;\n","import React from 'react';\nimport Clock from './components/Clock/Clock';\nimport names from './api/names';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'Vitalii',\n  };\n\n  setRandomName = () => {\n    const name = names[Math.floor(Math.random() * (names.length - 1))];\n\n    this.setState({\n      clockName: name,\n    });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={clockName} />}\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}